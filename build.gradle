// =====
// Build
// =====
buildscript {
    apply from: "$rootDir/gradle/repositories.gradle", to: buildscript

    dependencies {
        classpath 'com.palantir.baseline:gradle-baseline-java:0.21.0'
        classpath 'commons-codec:commons-codec:1.9'
        classpath 'com.netflix.nebula:nebula-dependency-recommender:5.2.0'
        classpath 'com.netflix.nebula:nebula-publishing-plugin:5.1.4'
        classpath 'gradle.plugin.com.palantir.gradle.gitversion:gradle-git-version:0.4.2'
    }
}

plugins {
    id 'com.palantir.configuration-resolver' version '0.2.0'
    id 'com.palantir.git-version' version '0.2.0'
    id 'org.inferred.processors' version '1.2.15'
}

// =======
// Plugins
// =======
apply from: "$rootDir/gradle/repositories.gradle"
apply plugin: 'com.palantir.baseline-config'

dependencies {
  // Adds a dependency on the Baseline configuration files. Typically use
  // the same version as the plugin itself.
  baseline 'com.palantir.baseline:gradle-baseline-java-config:0.21.0@zip'
}


apply plugin: 'java-base'
apply plugin: 'com.palantir.baseline-config'
apply plugin: 'com.palantir.baseline-idea'

allprojects {
    group 'com.trimit'
    version gitVersion()

    apply plugin: 'com.palantir.configuration-resolver'
    apply plugin: 'nebula.dependency-recommender'

    dependencyRecommendations {
        strategy OverrideTransitives
        propertiesFile file: project.rootProject.file('versions.props')
    }

    configurations.all {
        resolutionStrategy {
            failOnVersionConflict()
        }
    }
}

subprojects {
  apply plugin: 'java'
  apply plugin: 'com.palantir.baseline-checkstyle'
  apply plugin: 'com.palantir.baseline-eclipse'
  apply plugin: 'com.palantir.baseline-idea'
  apply plugin: 'org.inferred.processors'

  sourceCompatibility = '1.8'
  targetCompatibility = '1.8'

  dependencies {
    nebulaRecommenderBom 'io.dropwizard:dropwizard-bom:1.3.2@pom'
  }
}

// ====
// IDEA
// ====
apply from: "$rootDir/gradle/idea.gradle"
